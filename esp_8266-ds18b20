// www.arduinesp.com

//

// Plot DTH11 data on thingspeak.com using an ESP8266

// April 11 2015

// Author: Jeroen Beemster

// Website: www.arduinesp.com

 

#include <ESP8266WiFi.h>

#include <OneWire.h>

#include <DallasTemperature.h>

#define DELAIS 30 // en secondes

#define ONE_WIRE_BUS 2  // DS18B20 pin

OneWire oneWire(ONE_WIRE_BUS);

DallasTemperature DS18B20(&oneWire);

// replace with your channel's thingspeak API key,

String apiKey = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx";

const char* ssid = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx";

const char* password = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx";

const char* server = "api.thingspeak.com";

WiFiClient client;

void setup() {

  Serial.begin(115200);

  delay(10);

  WiFi.begin(ssid, password);

  Serial.println();

  Serial.println();

  Serial.print("Connecting to ");

  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {

    delay(500);

    Serial.print(".");

  }

  Serial.println("");

  Serial.println("WiFi connected");

}

void loop() {

   //recup temperature ds18b20

   float temp;

 

  do {

    DS18B20.requestTemperatures();

    temp = DS18B20.getTempCByIndex(0);

    Serial.print("Temperature: ");

    Serial.println(temp);

  } while (temp == 85.0 || temp == (-127.0));

 

  

  

  if (isnan(temp)) {

    Serial.println("Failed to read temp from DS18B20 sensor!");

    return;

  }

  if (client.connect(server,80)) {  //   "184.106.153.149" or api.thingspeak.com

    String postStr = apiKey;

           postStr +="&field1=";

           postStr += String(temp);

           postStr += "\r\n\r\n";

     client.print("POST /update HTTP/1.1\n");

     client.print("Host: api.thingspeak.com\n");

     client.print("Connection: close\n");

     client.print("X-THINGSPEAKAPIKEY: "+apiKey+"\n");

     client.print("Content-Type: application/x-www-form-urlencoded\n");

     client.print("Content-Length: ");

     client.print(postStr.length());

     client.print("\n\n");

     client.print(postStr);

     Serial.print("Temperature: ");

     Serial.print(temp);

     Serial.print(" degrees Celcius ");

     Serial.println("% send to Thingspeak");

  }

  client.stop();

  Serial.print("Waiting...");
  Serial.print(DELAIS);
  Serial.println("Secondes.");

  // thingspeak needs minimum 15 sec delay between updates

  delay(DELAIS*1000);

}
